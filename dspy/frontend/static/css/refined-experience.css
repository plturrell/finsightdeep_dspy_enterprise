/**
 * DSPy Refined Experience
 * 
 * Focuses on minimalist interface with proper visual hierarchy,
 * reduced competing elements, and increased negative space.
 */

/* ===== PRIMARY FOCUS AREA ===== */
.primary-visualization {
  position: relative;
  width: 100%;
  min-height: 500px;
  margin: 0;
  padding: 0;
  overflow: hidden;
  isolation: isolate; /* Creates a new stacking context */
}

/* Increase focus on visualization by removing borders and adding subtle depth */
.visualization-container {
  border: none;
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.04);
  transition: transform 0.4s cubic-bezier(0.2, 0, 0.2, 1);
  position: relative;
  z-index: 2;
  background: transparent;
}

/* Remove competing elements from main view */
.secondary-controls,
.tertiary-info,
.debug-panel,
.version-indicator,
.meta-data-panel {
  opacity: 0;
  visibility: hidden;
  position: absolute;
  transition: opacity 0.3s ease, visibility 0.3s ease;
  pointer-events: none;
}

/* ===== CONTEXTUAL SIDE PANEL ===== */
.side-panel {
  position: fixed;
  top: 0;
  right: -360px; /* Start off-screen */
  width: 360px;
  height: 100vh;
  background: rgba(255, 255, 255, 0.98);
  box-shadow: -10px 0 30px rgba(0, 0, 0, 0.08);
  transition: right 0.5s cubic-bezier(0.2, 0, 0.2, 1);
  z-index: 100;
  overflow-y: auto;
  overscroll-behavior: contain;
}

/* Side panel appears only when content is being viewed or on hover */
.visualization-container:hover .side-panel-trigger,
.side-panel-trigger:hover,
.side-panel-trigger:focus,
.visualization-container.detailed-view .side-panel {
  opacity: 1;
  visibility: visible;
}

.visualization-container.detailed-view ~ .side-panel,
.side-panel:hover,
.side-panel:focus-within {
  right: 0; /* Slide in when active */
}

/* Trigger for side panel - subtle, appears on context */
.side-panel-trigger {
  position: absolute;
  top: 50%;
  right: 0;
  width: 32px;
  height: 80px;
  background: rgba(255, 255, 255, 0.9);
  border-radius: 4px 0 0 4px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transform: translateY(-50%);
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s ease, visibility 0.3s ease, background-color 0.3s ease;
  z-index: 90;
}

.side-panel-trigger:hover {
  background: rgba(255, 255, 255, 1);
}

.side-panel-trigger::after {
  content: '';
  width: 8px;
  height: 8px;
  border-top: 2px solid rgba(0, 0, 0, 0.5);
  border-right: 2px solid rgba(0, 0, 0, 0.5);
  transform: rotate(45deg) translateX(-2px);
}

/* Side panel content - clean and minimal */
.side-panel-content {
  padding: 40px 24px;
}

/* Close button for side panel */
.side-panel-close {
  position: absolute;
  top: 16px;
  right: 16px;
  width: 32px;
  height: 32px;
  background: transparent;
  border: none;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0.6;
  transition: opacity 0.3s ease;
}

.side-panel-close:hover {
  opacity: 1;
}

/* ===== MINIMIZED TEXT ===== */
/* Reduce text in visualization area */
.visualization-title {
  font-size: 20px;
  font-weight: 500;
  margin: 0;
  padding: 0;
  opacity: 0.9;
  position: absolute;
  top: 20px;
  left: 20px;
  z-index: 3;
  background: rgba(255, 255, 255, 0.9);
  padding: 8px 16px;
  border-radius: 4px;
  transition: opacity 0.3s ease, transform 0.3s ease;
}

/* Title minimizes when viewing visualization */
.visualization-container:hover .visualization-title,
.visualization-container.detailed-view .visualization-title {
  opacity: 0.3;
  transform: translateY(-10px) scale(0.9);
}

.visualization-container:hover .visualization-title:hover {
  opacity: 0.9;
  transform: translateY(0) scale(1);
}

/* Hide description by default, show in side panel */
.visualization-description {
  display: none;
}

.side-panel .visualization-description {
  display: block;
  margin: 0 0 24px 0;
  font-size: 14px;
  line-height: 1.6;
  color: rgba(0, 0, 0, 0.7);
}

/* ===== REFINED GRADIENTS ===== */
/* Whisper-subtle gradients */
.subtle-gradient {
  background: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0.02) 0%,
    rgba(210, 220, 255, 0.05) 50%,
    rgba(235, 240, 255, 0.02) 100%
  );
}

.graph-node {
  background: rgba(255, 255, 255, 0.8);
  backdrop-filter: blur(4px);
  border: 1px solid rgba(220, 230, 255, 0.2);
  box-shadow: 
    0 2px 10px rgba(0, 0, 0, 0.02),
    0 0 0 1px rgba(255, 255, 255, 0.8) inset;
}

.graph-connection {
  stroke: rgba(100, 120, 240, 0.15);
  stroke-width: 1px;
}

.graph-connection:hover {
  stroke: rgba(100, 120, 240, 0.4);
  stroke-width: 1.5px;
}

/* ===== INTUITIVE PATTERNS VS TOOLTIPS ===== */
/* Hide traditional tooltips */
[data-tooltip] {
  position: relative;
}

[data-tooltip]::before,
[data-tooltip]::after {
  display: none;
}

/* Replace with contextual highlights */
.interactive-element {
  position: relative;
  cursor: pointer;
}

.interactive-element::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 100%;
  height: 1px;
  background: rgba(100, 120, 240, 0.3);
  transform: scaleX(0.2);
  transform-origin: left;
  transition: transform 0.3s ease;
}

.interactive-element:hover::after {
  transform: scaleX(1);
}

/* Self-explanatory UI elements */
.module-card {
  position: relative;
  padding: 12px;
  border-radius: 4px;
  background: white;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.module-card::before {
  content: attr(data-purpose);
  position: absolute;
  top: -8px;
  left: 8px;
  padding: 2px 8px;
  background: white;
  border-radius: 4px;
  font-size: 10px;
  color: rgba(0, 0, 0, 0.5);
  letter-spacing: 0.5px;
  text-transform: uppercase;
}

.module-card:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.08);
}

/* ===== INCREASED NEGATIVE SPACE ===== */
.content-section {
  padding: 80px 0;
}

.visualization-container {
  margin: 60px 0;
  padding: 40px;
}

.graph-container {
  max-width: 1000px;
  margin: 0 auto;
}

.graph-node {
  margin: 20px;
  padding: 16px;
}

/* Space between components */
.component-list {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));
  gap: 32px;
  padding: 40px 0;
}

/* ===== SURPRISE MOMENT ===== */
/* Hidden easter egg that appears at key moment */
.magical-moment {
  position: absolute;
  opacity: 0;
  visibility: hidden;
  transform: scale(0.8);
  transition: opacity 0.6s cubic-bezier(0.2, 0, 0.4, 1), transform 0.6s cubic-bezier(0.2, 0, 0.4, 1);
  z-index: 10;
}

.magical-moment.revealed {
  opacity: 1;
  visibility: visible;
  transform: scale(1);
}

/* Surprise confetti effect */
@keyframes confetti-fall {
  0% { transform: translateY(-100px) rotate(0deg); opacity: 1; }
  100% { transform: translateY(500px) rotate(360deg); opacity: 0; }
}

.confetti-piece {
  position: absolute;
  width: 8px;
  height: 16px;
  background: var(--confetti-color, #536DFE);
  opacity: 0;
  top: -20px;
  z-index: 9;
}

.success-moment .confetti-piece {
  animation: confetti-fall 3s ease-in-out forwards;
}

/* ===== PERSONAL EMOTIONAL NARRATIVE ===== */
.personal-impact {
  position: relative;
  padding: 40px;
  border-radius: 8px;
  background: rgba(255, 255, 255, 0.8);
  backdrop-filter: blur(10px);
  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.08);
  margin: 60px auto;
  max-width: 560px;
  transition: transform 0.4s cubic-bezier(0.2, 0, 0.2, 1);
}

.personal-impact:hover {
  transform: translateY(-4px);
}

.impact-story {
  font-size: 16px;
  line-height: 1.8;
  color: rgba(0, 0, 0, 0.8);
}

.impact-quote {
  font-style: italic;
  font-size: 18px;
  line-height: 1.6;
  color: rgba(0, 0, 0, 0.75);
  border-left: 2px solid rgba(100, 120, 240, 0.3);
  padding-left: 20px;
  margin: 24px 0;
}

.impact-author {
  font-size: 14px;
  color: rgba(0, 0, 0, 0.6);
  text-align: right;
}

/* Personalized impact metrics */
.impact-metrics {
  display: flex;
  gap: 24px;
  margin-top: 32px;
}

.impact-metric {
  flex: 1;
  text-align: center;
}

.metric-value {
  font-size: 24px;
  font-weight: 500;
  color: rgba(0, 0, 0, 0.85);
  margin-bottom: 8px;
}

.metric-label {
  font-size: 12px;
  text-transform: uppercase;
  letter-spacing: 1px;
  color: rgba(0, 0, 0, 0.5);
}

/* Contextual appearance */
.impact-content {
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 0.5s ease, transform 0.5s ease;
}

.personal-impact.visible .impact-content {
  opacity: 1;
  transform: translateY(0);
  transition-delay: 0.2s;
}

/* JavaScript functions */
/* These would be implemented in a separate JS file */
/* 
function initContextualSidePanel() {
  // Makes side panel appear contextually
}

function minimizeCompetingElements() {
  // Hides non-essential UI when viewing visualization
}

function triggerSurpriseMoment() {
  // Triggered at key achievement point
}

function showPersonalImpact() {
  // Shows personalized impact based on user interaction
}
*/