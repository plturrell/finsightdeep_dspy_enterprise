digraph "classes" {
rankdir=BT
charset="utf-8"
"dspy.teleprompt.vanilla.LabeledFewShot" [color="black", fontcolor="black", label=<{LabeledFewShot|k : int<br ALIGN="LEFT"/>student<br ALIGN="LEFT"/>trainset<br ALIGN="LEFT"/>|compile(student)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"dspy.teleprompt.bootstrap.BootstrapFewShot" [color="black", fontcolor="black", label=<{BootstrapFewShot|error_count : int<br ALIGN="LEFT"/>error_lock : lock<br ALIGN="LEFT"/>max_bootstrapped_demos : int<br ALIGN="LEFT"/>max_errors : int<br ALIGN="LEFT"/>max_labeled_demos : int<br ALIGN="LEFT"/>max_rounds : int<br ALIGN="LEFT"/>metric : NoneType<br ALIGN="LEFT"/>metric_threshold : NoneType<br ALIGN="LEFT"/>name2predictor : dict<br ALIGN="LEFT"/>name2traces<br ALIGN="LEFT"/>predictor2name : dict<br ALIGN="LEFT"/>student<br ALIGN="LEFT"/>teacher<br ALIGN="LEFT"/>teacher_settings : NoneType, dict<br ALIGN="LEFT"/>trainset<br ALIGN="LEFT"/>validation<br ALIGN="LEFT"/>valset : NoneType<br ALIGN="LEFT"/>|compile(student)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"dspy.teleprompt.finetune.BootstrapFinetune" [color="black", fontcolor="black", label=<{BootstrapFinetune|metric : NoneType<br ALIGN="LEFT"/>multitask : bool<br ALIGN="LEFT"/>teacher_settings : dict<br ALIGN="LEFT"/>teleprompter<br ALIGN="LEFT"/>|compile(student)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"dspy.teleprompt.teleprompt_optuna.BootstrapFewShotWithOptuna" [color="black", fontcolor="black", label=<{BootstrapFewShotWithOptuna|compiled_teleprompter<br ALIGN="LEFT"/>max_labeled_demos : int<br ALIGN="LEFT"/>max_num_samples : int<br ALIGN="LEFT"/>max_rounds : int<br ALIGN="LEFT"/>metric<br ALIGN="LEFT"/>min_num_samples : int<br ALIGN="LEFT"/>num_candidate_sets : int<br ALIGN="LEFT"/>num_threads : int<br ALIGN="LEFT"/>student<br ALIGN="LEFT"/>teacher<br ALIGN="LEFT"/>teacher_settings : dict<br ALIGN="LEFT"/>trainset<br ALIGN="LEFT"/>valset<br ALIGN="LEFT"/>|compile(student)<br ALIGN="LEFT"/>objective(trial)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"dspy.teleprompt.random_search.BootstrapFewShotWithRandomSearch" [color="black", fontcolor="black", label=<{BootstrapFewShotWithRandomSearch|max_errors : int<br ALIGN="LEFT"/>max_labeled_demos : int<br ALIGN="LEFT"/>max_num_samples : int<br ALIGN="LEFT"/>max_rounds : int<br ALIGN="LEFT"/>metric<br ALIGN="LEFT"/>metric_threshold : NoneType<br ALIGN="LEFT"/>min_num_samples : int<br ALIGN="LEFT"/>num_candidate_sets : int<br ALIGN="LEFT"/>num_threads : int<br ALIGN="LEFT"/>stop_at_score : NoneType<br ALIGN="LEFT"/>teacher_settings : dict<br ALIGN="LEFT"/>trainset<br ALIGN="LEFT"/>valset<br ALIGN="LEFT"/>|compile(student)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"dspy.teleprompt.copro_optimizer.COPRO" [color="black", fontcolor="black", label=<{COPRO|breadth : int<br ALIGN="LEFT"/>depth : int<br ALIGN="LEFT"/>init_temperature : float<br ALIGN="LEFT"/>metric : NoneType<br ALIGN="LEFT"/>prompt_model : NoneType<br ALIGN="LEFT"/>track_stats : bool<br ALIGN="LEFT"/>|compile(student)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"dspy.teleprompt.ensemble.Ensemble" [color="black", fontcolor="black", label=<{Ensemble|deterministic : bool<br ALIGN="LEFT"/>reduce_fn : NoneType<br ALIGN="LEFT"/>size : NoneType<br ALIGN="LEFT"/>|compile(programs)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"dspy.teleprompt.knn_fewshot.KNNFewShot" [color="black", fontcolor="black", label=<{KNNFewShot|KNN<br ALIGN="LEFT"/>|compile(student)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"dspy.teleprompt.mipro_optimizer.MIPRO" [color="black", fontcolor="black", label=<{MIPRO|init_temperature : float<br ALIGN="LEFT"/>metric<br ALIGN="LEFT"/>num_candidates : int<br ALIGN="LEFT"/>observations : NoneType<br ALIGN="LEFT"/>prompt_model : NoneType<br ALIGN="LEFT"/>task_model : NoneType<br ALIGN="LEFT"/>teacher_settings : dict<br ALIGN="LEFT"/>track_stats : bool<br ALIGN="LEFT"/>verbose : bool<br ALIGN="LEFT"/>view_data_batch_size : int<br ALIGN="LEFT"/>|compile(student: dspy.Program): dspy.Program<br ALIGN="LEFT"/>}>, shape="record", style="solid"];


"dspy.teleprompt.vanilla.LabeledFewShot" -> "dspy.teleprompt.teleprompt.Teleprompter" [arrowhead="empty", arrowtail="none"];
"dspy.teleprompt.teleprompt.Teleprompter" [color="black", fontcolor="black", label=<{Teleprompter|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"dspy.teleprompt.bootstrap.BootstrapFewShot" -> "dspy.teleprompt.teleprompt.Teleprompter" [arrowhead="empty", arrowtail="none"];
"dspy.teleprompt.copro_optimizer.COPRO" -> "dspy.teleprompt.teleprompt.Teleprompter" [arrowhead="empty", arrowtail="none"];
"dspy.teleprompt.ensemble.Ensemble" -> "dspy.teleprompt.teleprompt.Teleprompter" [arrowhead="empty", arrowtail="none"];
"dspy.teleprompt.finetune.BootstrapFinetune" -> "dspy.teleprompt.teleprompt.Teleprompter" [arrowhead="empty", arrowtail="none"];
"dspy.teleprompt.knn_fewshot.KNNFewShot" -> "dspy.teleprompt.teleprompt.Teleprompter" [arrowhead="empty", arrowtail="none"];
"dspy.teleprompt.mipro_optimizer.MIPRO" -> "dspy.teleprompt.teleprompt.Teleprompter" [arrowhead="empty", arrowtail="none"];
"dspy.teleprompt.random_search.BootstrapFewShotWithRandomSearch" -> "dspy.teleprompt.teleprompt.Teleprompter" [arrowhead="empty", arrowtail="none"];
"dspy.teleprompt.teleprompt_optuna.BootstrapFewShotWithOptuna" -> "dspy.teleprompt.teleprompt.Teleprompter" [arrowhead="empty", arrowtail="none"];
"dspy.teleprompt.bootstrap.BootstrapFewShot" -> "dspy.teleprompt.finetune.BootstrapFinetune" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="teleprompter", style="solid"];


// "dspy.teleprompt.mipro_optimizer.BasicGenerateInstruction" [color="black", fontcolor="black", label=<{BasicGenerateInstruction|basic_instruction : FieldInfo<br ALIGN="LEFT"/>proposed_instruction : FieldInfo<br ALIGN="LEFT"/>proposed_prefix_for_output_field : FieldInfo<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
// "dspy.teleprompt.copro_optimizer.BasicGenerateInstruction" [color="black", fontcolor="black", label=<{BasicGenerateInstruction|basic_instruction : FieldInfo<br ALIGN="LEFT"/>proposed_instruction : FieldInfo<br ALIGN="LEFT"/>proposed_prefix_for_output_field : FieldInfo<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
// "dspy.teleprompt.mipro_optimizer.BasicGenerateInstructionWithDataObservations" [color="black", fontcolor="black", label=<{BasicGenerateInstructionWithDataObservations|basic_instruction : FieldInfo<br ALIGN="LEFT"/>observations : FieldInfo<br ALIGN="LEFT"/>proposed_instruction : FieldInfo<br ALIGN="LEFT"/>proposed_prefix_for_output_field : FieldInfo<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
// "dspy.teleprompt.mipro_optimizer.BasicGenerateInstructionWithExamples" [color="black", fontcolor="black", label=<{BasicGenerateInstructionWithExamples|basic_instruction : FieldInfo<br ALIGN="LEFT"/>examples : FieldInfo<br ALIGN="LEFT"/>proposed_instruction : FieldInfo<br ALIGN="LEFT"/>proposed_prefix_for_output_field : FieldInfo<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
// "dspy.teleprompt.mipro_optimizer.BasicGenerateInstructionWithExamplesAndDataObservations" [color="black", fontcolor="black", label=<{BasicGenerateInstructionWithExamplesAndDataObservations|basic_instruction : FieldInfo<br ALIGN="LEFT"/>examples : FieldInfo<br ALIGN="LEFT"/>observations : FieldInfo<br ALIGN="LEFT"/>proposed_instruction : FieldInfo<br ALIGN="LEFT"/>proposed_prefix_for_output_field : FieldInfo<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];



// "dspy.teleprompt.mipro_optimizer.DatasetDescriptor" [color="black", fontcolor="black", label=<{DatasetDescriptor|examples : FieldInfo<br ALIGN="LEFT"/>observations : FieldInfo<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
// "dspy.teleprompt.mipro_optimizer.DatasetDescriptorWithPriorObservations" [color="black", fontcolor="black", label=<{DatasetDescriptorWithPriorObservations|examples : FieldInfo<br ALIGN="LEFT"/>observations : FieldInfo<br ALIGN="LEFT"/>prior_observations : FieldInfo<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];

// "dspy.teleprompt.ensemble.Ensemble.compile.EnsembledProgram" [color="black", fontcolor="black", label=<{EnsembledProgram|programs<br ALIGN="LEFT"/>|forward()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
// "dspy.teleprompt.copro_optimizer.GenerateInstructionGivenAttempts" [color="black", fontcolor="black", label=<{GenerateInstructionGivenAttempts|attempted_instructions : FieldInfo<br ALIGN="LEFT"/>proposed_instruction : FieldInfo<br ALIGN="LEFT"/>proposed_prefix_for_output_field : FieldInfo<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
// "dspy.teleprompt.signature_opt_typed.make_initial_signature.GenerateInstructionInitial" [color="black", fontcolor="black", label=<{GenerateInstructionInitial|basic_signature : T<br ALIGN="LEFT"/>proposed_signatures : list[T]<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
// "dspy.teleprompt.signature_opt_typed.generate_with_avoidance.GenerateSignature" [color="black", fontcolor="black", label=<{GenerateSignature|analysis : str<br ALIGN="LEFT"/>proposed_signature : T<br ALIGN="LEFT"/>score : float<br ALIGN="LEFT"/>|check_signature_not_attempted(s: T): T<br ALIGN="LEFT"/>}>, shape="record", style="solid"];

// "dspy.teleprompt.mipro_optimizer.ObservationSummarizer" [color="black", fontcolor="black", label=<{ObservationSummarizer|observations : FieldInfo<br ALIGN="LEFT"/>summary : FieldInfo<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
// "dspy.teleprompt.signature_opt_typed.OptimizerResult" [color="black", fontcolor="black", label=<{OptimizerResult|program : Module<br ALIGN="LEFT"/>scores : list[float]<br ALIGN="LEFT"/>signatures : list[dict[str, Signature]]<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
}
